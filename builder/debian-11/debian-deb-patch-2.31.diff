From b24be67b104c57df9ce5bd0243fd963fb707616e Mon Sep 17 00:00:00 2001
From: Sebastien Valat <sebastien.valat.dev@orange.fr>
Date: Sat, 26 Mar 2022 11:23:22 +0100
Subject: [PATCH] patched

---
 debian/rules.d/build.mk | 209 ----------------------------------------
 1 file changed, 209 deletions(-)

diff --git a/debian/rules.d/build.mk b/debian/rules.d/build.mk
index 1f3fdae..cebc3cc 100644
--- a/debian/rules.d/build.mk
+++ b/debian/rules.d/build.mk
@@ -122,64 +122,10 @@ endif
 $(patsubst %,build_%,$(GLIBC_PASSES)) :: build_% : $(stamp)build_%
 $(stamp)build_%: $(stamp)configure_%
 	@echo Building $(curpass)
-
-ifneq ($(filter stage1,$(DEB_BUILD_PROFILES)),)
-	$(MAKE) cross-compiling=yes -C $(DEB_BUILDDIR) $(NJOBS) csu/subdir_lib
-else
-	$(MAKE) -C $(DEB_BUILDDIR) $(NJOBS)
-	echo "---------------"
-	echo -n "Build ended: " ; date --rfc-2822
-endif
 	touch $@
 
 $(patsubst %,check_%,$(GLIBC_PASSES)) :: check_% : $(stamp)check_%
 $(stamp)check_%: $(stamp)build_%
-	@set -e ; \
-	if [ -n "$(filter nocheck,$(DEB_BUILD_OPTIONS))" ]; then \
-	  echo "Tests have been disabled via DEB_BUILD_OPTIONS." ; \
-	elif [ $(call xx,configure_build) != $(call xx,configure_target) ] && \
-	     ! $(DEB_BUILDDIR)/elf/ld.so $(DEB_BUILDDIR)/libc.so >/dev/null 2>&1 ; then \
-	  echo "Flavour cross-compiled, tests have been skipped." ; \
-	elif ! $(call kernel_check,$(call xx,MIN_KERNEL_SUPPORTED)); then \
-	  echo "Kernel too old, tests have been skipped." ; \
-	elif [ $(call xx,RUN_TESTSUITE) != "yes" ]; then \
-	  echo "Testsuite disabled for $(curpass), skipping tests."; \
-	else \
-	  find $(DEB_BUILDDIR) -name '*.out' -delete ; \
-	  LD_PRELOAD="" LANG="" LANGUAGE="" TIMEOUTFACTOR="$(TIMEOUTFACTOR)" $(MAKE) -C $(DEB_BUILDDIR) $(NJOBS) check || true ; \
-	  if ! test -f $(DEB_BUILDDIR)/tests.sum ; then \
-	    echo "+---------------------------------------------------------------------+" ; \
-	    echo "|                     Testsuite failed to build.                      |" ; \
-	    echo "+---------------------------------------------------------------------+" ; \
-	    exit 1 ; \
-	  fi ; \
-	  echo "+---------------------------------------------------------------------+" ; \
-	  echo "|                             Testsuite summary                       |" ; \
-	  echo "+---------------------------------------------------------------------+" ; \
-	  grep -E '^(FAIL|XFAIL|XPASS):' $(DEB_BUILDDIR)/tests.sum | sort ; \
-	  for test in $$(sed -e '/^\(FAIL\|XFAIL\): /!d;s/^.*: //' $(DEB_BUILDDIR)/tests.sum) ; do \
-	    echo "----------" ; \
-	    cat $(DEB_BUILDDIR)/$$test.test-result ; \
-	    if test -f $(DEB_BUILDDIR)/$$test.out ; then \
-	      cat $(DEB_BUILDDIR)/$$test.out ; \
-	    fi ; \
-	    echo "----------" ; \
-	  done ; \
-	  if grep -q '^FAIL:' $(DEB_BUILDDIR)/tests.sum ; then \
-	    echo "+---------------------------------------------------------------------+" ; \
-	    echo "|     Encountered regressions that don't match expected failures.     |" ; \
-	    echo "+---------------------------------------------------------------------+" ; \
-	    grep -E '^FAIL:' $(DEB_BUILDDIR)/tests.sum | sort ; \
-	    if ! dpkg-parsechangelog | egrep -q '^Version:.*\+deb[0-9]+u[0-9]+' ; then \
-	        exit 1 ; \
-	    fi ; \
-	  else \
-	    echo "+---------------------------------------------------------------------+" ; \
-	    echo "| Passed regression testing.  Give yourself a hearty pat on the back. |" ; \
-	    echo "+---------------------------------------------------------------------+" ; \
-	  fi ; \
-	fi
-	touch $@
 
 # Make sure to use the just built iconvconfig for native builds. When
 # cross-compiling use the system iconvconfig. A cross-specific
@@ -195,139 +141,6 @@ endif
 $(patsubst %,install_%,$(GLIBC_PASSES)) :: install_% : $(stamp)install_%
 $(stamp)install_%: $(stamp)build_%
 	@echo Installing $(curpass)
-	rm -rf $(CURDIR)/debian/tmp-$(curpass)
-ifneq ($(filter stage1,$(DEB_BUILD_PROFILES)),)
-	$(MAKE) -C $(DEB_BUILDDIR) $(NJOBS) \
-	    cross-compiling=yes install_root=$(CURDIR)/debian/tmp-$(curpass)	\
-	    install-bootstrap-headers=yes install-headers
-
-	install -d $(CURDIR)/debian/tmp-$(curpass)/$(call xx,libdir)
-	install -m 644 $(DEB_BUILDDIR)/csu/crt[01in].o $(CURDIR)/debian/tmp-$(curpass)/$(call xx,libdir)/.
-	$(call xx,CC) -nostdlib -nostartfiles -shared -x c /dev/null \
-	        -o $(CURDIR)/debian/tmp-$(curpass)/$(call xx,libdir)/libc.so
-else
-	: # FIXME: why just needed for ARM multilib?
-	case "$(curpass)" in \
-	        armhf) \
-			libgcc_dirs=/lib/arm-linux-gnueabihf; \
-			if [ -n "$$WITH_BUILD_SYSROOT" ]; then \
-			  libgcc_dirs="$$WITH_BUILD_SYSROOT/usr/arm-linux-gnueabi/lib/arm-linux-gnueabihf $$WITH_BUILD_SYSROOT/usr/lib/gcc-cross/arm-linux-gnueabi/4.7/hf"; \
-			fi; \
-			;; \
-	        armel) \
-			libgcc_dirs=/lib/arm-linux-gnueabi; \
-			if [ -n "$$WITH_BUILD_SYSROOT" ]; then \
-			  libgcc_dirs="$$WITH_BUILD_SYSROOT/usr/arm-linux-gnueabihf/lib/arm-linux-gnueabi $$WITH_BUILD_SYSROOT/usr/lib/gcc-cross/arm-linux-gnueabihf/4.7/sf"; \
-			fi; \
-			;; \
-	esac; \
-	if [ -n "$$libgcc_dirs" ]; then \
-	  for d in $$libgcc_dirs; do \
-	    if [ -f $$d/libgcc_s.so.1 ]; then \
-	      cp -p $$d/libgcc_s.so.1 $(DEB_BUILDDIR)/; \
-	      break; \
-	    fi; \
-	  done; \
-	fi
-	$(MAKE) -C $(DEB_BUILDDIR) \
-	  install_root=$(CURDIR)/debian/tmp-$(curpass) install
-
-	# Generate gconv-modules.cache
-	case $(curpass)-$(call xx,slibdir) in libc-* | *-/lib32 | *-/lib64 | *-/libo32 | *-/libx32) \
-	  $(ICONVCONFIG) --nostdlib --prefix=$(CURDIR)/debian/tmp-$(curpass) \
-			 -o $(CURDIR)/debian/tmp-$(curpass)/$(call xx,libdir)/gconv/gconv-modules.cache \
-			 $(call xx,libdir)/gconv \
-	  ;; \
-	esac
-
-	# Generate the list of SUPPORTED locales
-	if [ $(curpass) = libc ]; then \
-	  $(MAKE) -f debian/generate-supported.mk IN=localedata/SUPPORTED \
-	    OUT=debian/tmp-$(curpass)/usr/share/i18n/SUPPORTED; \
-	fi
-
-	# Remove yppasswd.h and yppasswd.x as they are shipped by libnsl-dev
-	# This could probably be removed once we stop using --enable-obsolete-rpc.
-	rm $(CURDIR)/debian/tmp-$(curpass)/usr/include/rpcsvc/yppasswd.h
-	rm $(CURDIR)/debian/tmp-$(curpass)/usr/include/rpcsvc/yppasswd.x
-
-ifeq ($(DEB_HOST_ARCH_OS),linux)
-	# Install the Python pretty printers
-	mkdir -p $(CURDIR)/debian/tmp-$(curpass)/usr/share/gdb/auto-load/$(call xx,slibdir)
-	perl -pe 'BEGIN {undef $$/; open(IN, "$(DEB_BUILDDIR)/nptl/nptl_lock_constants.py"); $$j=<IN>;} s/from nptl_lock_constants import \*/$$j/g;' \
-		$(CURDIR)/nptl/nptl-printers.py > $(CURDIR)/debian/tmp-$(curpass)/usr/share/gdb/auto-load/$(call xx,slibdir)/libpthread-$(GLIBC_VERSION).so-gdb.py
-endif
-endif
-
-	# Create the multiarch directories, and the configuration file in /etc/ld.so.conf.d
-	if [ $(curpass) = libc ]; then \
-	  mkdir -p debian/tmp-$(curpass)/etc/ld.so.conf.d; \
-	  conffile="debian/tmp-$(curpass)/etc/ld.so.conf.d/$(DEB_HOST_MULTIARCH).conf"; \
-	  echo "# Multiarch support" > $$conffile; \
-	  echo "/usr/local/lib/$(DEB_HOST_MULTIARCH)" >> $$conffile; \
-	  echo "$(call xx,slibdir)" >> $$conffile; \
-	  echo "$(call xx,libdir)" >> $$conffile; \
-	  if [ "$(DEB_HOST_GNU_TYPE)" != "$(DEB_HOST_MULTIARCH)" ]; then \
-	    echo "/usr/local/lib/$(DEB_HOST_GNU_TYPE)" >> $$conffile; \
-	    echo "/lib/$(DEB_HOST_GNU_TYPE)" >> $$conffile; \
-	    echo "/usr/lib/$(DEB_HOST_GNU_TYPE)" >> $$conffile; \
-	  fi; \
-	  mkdir -p debian/tmp-$(curpass)/usr/include/$(DEB_HOST_MULTIARCH); \
-	  mv debian/tmp-$(curpass)/usr/include/bits debian/tmp-$(curpass)/usr/include/$(DEB_HOST_MULTIARCH); \
-	  mv debian/tmp-$(curpass)/usr/include/gnu debian/tmp-$(curpass)/usr/include/$(DEB_HOST_MULTIARCH); \
-	  mv debian/tmp-$(curpass)/usr/include/sys debian/tmp-$(curpass)/usr/include/$(DEB_HOST_MULTIARCH); \
-	  mv debian/tmp-$(curpass)/usr/include/fpu_control.h debian/tmp-$(curpass)/usr/include/$(DEB_HOST_MULTIARCH); \
-	  mv debian/tmp-$(curpass)/usr/include/a.out.h debian/tmp-$(curpass)/usr/include/$(DEB_HOST_MULTIARCH); \
-	  mv debian/tmp-$(curpass)/usr/include/ieee754.h debian/tmp-$(curpass)/usr/include/$(DEB_HOST_MULTIARCH); \
-	  mkdir -p debian/tmp-$(curpass)/usr/include/finclude/$(DEB_HOST_MULTIARCH); \
-	  mv debian/tmp-$(curpass)/usr/include/finclude/math-vector-fortran.h debian/tmp-$(curpass)/usr/include/finclude/$(DEB_HOST_MULTIARCH); \
-	fi
-
-ifeq ($(filter stage1,$(DEB_BUILD_PROFILES)),)
-	# For our biarch libc, add an ld.so.conf.d configuration; this
-	# is needed because multiarch libc Replaces: libc6-i386 for ld.so, and
-	# the multiarch ld.so doesn't look at the (non-standard) /lib32, so we
-	# need path compatibility when biarch and multiarch packages are both
-	# installed.
-	case $(call xx,slibdir) in /lib32 | /lib64 | /libo32 | /libx32) \
-	  mkdir -p debian/tmp-$(curpass)/etc/ld.so.conf.d; \
-	  conffile="debian/tmp-$(curpass)/etc/ld.so.conf.d/zz_$(curpass)-biarch-compat.conf"; \
-	  echo "# Legacy biarch compatibility support" > $$conffile; \
-	  echo "$(call xx,slibdir)" >> $$conffile; \
-	  echo "$(call xx,libdir)" >> $$conffile; \
-	  ;; \
-	esac
-
-	# handle the non-default multilib for arm targets
-	case $(curpass) in arm*) \
-	  mkdir -p debian/tmp-$(curpass)/etc/ld.so.conf.d; \
-	  conffile="debian/tmp-$(curpass)/etc/ld.so.conf.d/zz_$(curpass)-biarch-compat.conf"; \
-	  echo "# Multiarch support" > $$conffile; \
-	  echo "$(call xx,slibdir)" >> $$conffile; \
-	  echo "$(call xx,libdir)" >> $$conffile; \
-	esac
-
-	# ARM: add dynamic linker name for the non-default multilib in ldd
-	if [ $(curpass) = libc ]; then \
-	  case $(DEB_HOST_ARCH) in \
-	    armel) \
-	      sed -i '/RTLDLIST=/s,=\(.*\),="\1 /lib/ld-linux-armhf.so.3",' debian/tmp-$(curpass)/usr/bin/ldd;; \
-	    armhf) \
-	      sed -i '/RTLDLIST=/s,=\(.*\),="\1 /lib/ld-linux.so.3",' debian/tmp-$(curpass)/usr/bin/ldd;; \
-	  esac; \
-	fi
-
-	# Create the ld.so symlink in the slibdir directory, otherwise it will get
-	# created later by ldconfig, leading to a dangling symlink when the package
-	# is removed
-	ld_so="$$(ls debian/tmp-$(curpass)/$(call xx,slibdir)/ld-*.so)" ; \
-	soname="$$(LANG=C LC_ALL=C readelf -d $$ld_so | grep 'Library soname:' | sed -e 's/.*Library soname: \[\(.*\)\]/\1/g')" ; \
-	target="$$(basename $$ld_so)" ; \
-	link_name="debian/tmp-$(curpass)/$(call xx,slibdir)/$$soname" ; \
-	ln -sf $$target $$link_name
-	
-	$(call xx,extra_install)
-endif
 	touch $@
 
 #
@@ -351,34 +164,12 @@ LOCALEDEF = I18NPATH=$(CURDIR)/localedata \
 endif
 
 $(stamp)build_C.UTF-8: $(stamp)/build_libc
-	$(LOCALEDEF) --quiet -c -f UTF-8 -i C $(CURDIR)/build-tree/C.UTF-8
 	touch $@
 
 $(stamp)build_locales-all: $(stamp)/build_libc
-	$(MAKE) -C $(DEB_BUILDDIRLIBC) $(NJOBS) \
-		objdir=$(DEB_BUILDDIRLIBC) \
-		install_root=$(CURDIR)/build-tree/locales-all \
-		localedata/install-locale-files LOCALEDEF="$(LOCALEDEF)"
-	rdfind -outputname /dev/null -makesymlinks true -removeidentinode false \
-		$(CURDIR)/build-tree/locales-all/usr/lib/locale
-	symlinks -r -s -c $(CURDIR)/build-tree/locales-all/usr/lib/locale
 	touch $@
 
 $(stamp)source: $(stamp)patch
-	mkdir -p $(build-tree)
-	find $(GLIBC_SOURCES) -print0 | \
-	LC_ALL=C sort -z | \
-	tar -c -J --null --no-recursion -T - \
-		--mode=go=rX,u+rw,a-s \
-		--clamp-mtime --mtime "@$(SOURCE_DATE_EPOCH)" \
-		--owner=root --group=root --numeric-owner \
-		--xform='s=^=glibc-$(GLIBC_VERSION)/=' \
-		-f $(CURDIR)/$(build-tree)/glibc-$(GLIBC_VERSION).tar.xz
-	mkdir -p debian/glibc-source/usr/src/glibc
-	tar cf - --files-from debian/glibc-source.filelist \
-		--clamp-mtime --mtime "@$(SOURCE_DATE_EPOCH)" \
-		| tar -x -C debian/glibc-source/usr/src/glibc -f -
-
 	touch $@
 
 .NOTPARALLEL: $(patsubst %,check_%,$(GLIBC_PASSES))
-- 
2.30.2

